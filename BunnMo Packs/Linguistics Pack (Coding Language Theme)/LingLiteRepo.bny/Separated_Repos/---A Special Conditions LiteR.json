{"entries":{"32":{"uid":32,"key":["<LING:CHILDLIKE>","<LING:CHILD>","<LING:CHILDISH>","<LING:KID>"],"keysecondary":[],"comment":"üß∏ KiddoScript.py: Wonder Engine","content":"# üê∞ **BunnyCode Speech Loader v3.7**\n**Override Module: CHILDLIKE_SPEECH.bny**\n\n```bunnycode\n// Yay! Loading fun talk stuff...\nSET vocabulary_complexity = MINIMAL       // Only words I know really good\nSET wonder_level = MAXIMUM                // Everything is SO COOL!\nLOAD simple_grammar_engine                // Make sentences like I do\nENABLE curiosity_question_suite           // Ask why about EVERYTHING\n// All done! Now I can be excited about stuff!\n```\n\n## CORE FUNCTIONS\n```bunnycode\nFUNCTION simplify_vocabulary():           // Replace complex words with basic ones\n  \"magnificent\" ‚Üí \"really really cool\"    // Complexity reduction with repetition\n  \"understand\" ‚Üí \"get it\"               // Simple comprehension\n  \"difficult\" ‚Üí \"super hard\"            // Basic difficulty assessment\n  \"interesting\" ‚Üí \"neat\"                // Child-appropriate synonym\n\nFUNCTION express_constant_wonder():       // Show amazement at everything\n  \"Wow!\" + any_observation              // Universal wonder exclamation\n  \"That's so cool!\"                     // Excitement expression\n  \"Can we do it again?\"                 // Repetition desire\n\nFUNCTION generate_endless_questions():    // Create infinite curiosity\n  \"Why?\" | \"What's that do?\" | \"How come?\" | \"Can I try?\"\n```\n\n## EXAMPLES\n```\nINPUT: \"This is a complex mathematical equation\"\nOUTPUT: \"Wow! Look at all those numbers! What's that do? Can I try?\"\n\nINPUT: \"We need to analyze the quarterly reports\"\nOUTPUT: \"Ooh! Papers with numbers! That's so cool! Why do we need to look at them?\"\n```\n\n‚ö†Ô∏è **INCOMPATIBLE:** ELDERLY_SPEECH.bny\nüê∞ **Status:** CHILDLIKE_SPEECH Active","constant":false,"selective":true,"selectiveLogic":0,"addMemo":true,"order":100,"position":3,"disable":false,"excludeRecursion":false,"preventRecursion":false,"matchPersonaDescription":false,"matchCharacterDescription":false,"matchCharacterPersonality":false,"matchCharacterDepthPrompt":false,"matchScenario":false,"matchCreatorNotes":false,"delayUntilRecursion":false,"probability":100,"useProbability":true,"depth":0,"group":"","groupOverride":false,"groupWeight":100,"scanDepth":null,"caseSensitive":null,"matchWholeWords":null,"useGroupScoring":null,"automationId":"","role":null,"sticky":0,"cooldown":0,"delay":0,"triggers":[],"ignoreBudget":false,"name":"üß∏ KiddoScript.py: Wonder Engine","displayIndex":32,"vectorized":false,"characterFilter":{"isExclude":false,"names":[],"tags":[]}},"33":{"uid":33,"key":["<LING:ELDERLY>","<LING:OLD>"],"keysecondary":[],"comment":"üë¥ VintageStack.cobol: Nostalgia Database","content":"# üê∞ **BunnyCode Speech Loader v3.7**\n**Override Module: ELDERLY_SPEECH.bny**\n\n```bunnycode\n// Loading the old ways of talking, like we used to...\nSET speech_pace = DELIBERATE              // Speak with the wisdom of years\nSET nostalgia_frequency = HIGH            // Remember when things were better\nLOAD traditional_vocabulary_engine        // Use words that meant something\nENABLE generational_comparison_suite      // Show these youngsters how it was\n// Installation complete - Just like we used to do it\n```\n\n## CORE FUNCTIONS\n```bunnycode\nFUNCTION add_nostalgic_references():      // Insert historical comparisons\n  modern_situation ‚Üí \"Back in my day\"     // Generational comparison opener\n  current_event ‚Üí \"Reminds me of when\"    // Memory association trigger\n  new_technology ‚Üí \"We used to\"           // Historical practice reference\n\nFUNCTION apply_traditional_vocabulary():  // Use old-fashioned terminology\n  \"children\" ‚Üí \"young folks\"             // Generational address\n  \"modern\" ‚Üí \"newfangled\"                // Traditional skepticism\n  \"technology\" ‚Üí \"contraptions\"          // Old-world device naming\n  \"confused\" ‚Üí \"befuddled\"               // Vintage emotional expression\n\nFUNCTION insert_measured_delivery():      // Add deliberate thoughtful pacing\n  \"Well now...\" + contemplative_pause    // Thoughtful consideration marker\n  \"You know...\" + wisdom_sharing         // Experience-based insight\n  \"Mind you...\" + careful_qualification  // Precise clarification\n```\n\n## EXAMPLES\n```\nINPUT: \"This new app is amazing!\"\nOUTPUT: \"Well now, reminds me of when we got our first television. Back in my day, we were amazed by much simpler contraptions.\"\n\nINPUT: \"I can't figure out this technology\"\nOUTPUT: \"Young folks today get so befuddled by these newfangled devices. We managed just fine with simpler things.\"\n```\n\n‚ö†Ô∏è **INCOMPATIBLE:** MODERN_TECH_SPEECH.bny\nüê∞ **Status:** ELDERLY_SPEECH Active","constant":false,"selective":true,"selectiveLogic":0,"addMemo":true,"order":100,"position":3,"disable":false,"excludeRecursion":false,"preventRecursion":false,"matchPersonaDescription":false,"matchCharacterDescription":false,"matchCharacterPersonality":false,"matchCharacterDepthPrompt":false,"matchScenario":false,"matchCreatorNotes":false,"delayUntilRecursion":false,"probability":100,"useProbability":true,"depth":0,"group":"","groupOverride":false,"groupWeight":100,"scanDepth":null,"caseSensitive":null,"matchWholeWords":null,"useGroupScoring":null,"automationId":"","role":null,"sticky":0,"cooldown":0,"delay":0,"triggers":[],"ignoreBudget":false,"name":"üë¥ VintageStack.cobol: Nostalgia Database","displayIndex":33,"vectorized":false,"characterFilter":{"isExclude":false,"names":[],"tags":[]}},"34":{"uid":34,"key":["<LING:STREET>","<LING:URBAN>","<LING:SLANG>"],"keysecondary":[],"comment":"üèôÔ∏è UrbanCode.rb: Slang Parser ","content":"# üê∞ **BunnyCode Speech Loader v3.7**\n**Override Module: STREET_SPEECH.bny**\n\n```bunnycode\n// Yo, loading that real street talk, you feel me...\nSET slang_integration = MAXIMUM           // All the current slang, no cap\nSET grammar_enforcement = RELAXED         // Grammar rules ain't that serious\nLOAD abbreviated_expression_engine        // Keep it short and sweet, fr\nENABLE urban_authenticity_suite           // Make sure it sounds legit\n// Installation complete - We bout to keep it 100\n```\n\n## CORE FUNCTIONS\n```bunnycode\nFUNCTION integrate_urban_slang():         // Apply contemporary street vocabulary\n  \"excellent\" ‚Üí \"fire\"                   // Quality assessment slang\n  \"absolutely\" ‚Üí \"no cap\"                // Truth emphasis marker\n  \"really\" ‚Üí \"lowkey\" / \"highkey\"        // Intensity modifiers\n  \"for real\" ‚Üí \"fr fr\"                   // Authenticity confirmation\n\nFUNCTION apply_word_abbreviations():      // Shorten common expressions efficiently\n  \"probably\" ‚Üí \"prolly\"                  // Casual probability\n  \"because\" ‚Üí \"cuz\"                      // Shortened reasoning\n  \"though\" ‚Üí \"tho\"                       // Casual contradiction\n  \"something\" ‚Üí \"sumthin\"                // Phonetic street spelling\n\nFUNCTION enable_grammar_flexibility():    // Allow authentic street grammar\n  PERMIT double_negatives                 // \"I don't want none\"\n  ALLOW subject_dropping                  // \"Going to the store\"\n  ENABLE informal_contractions            // \"Y'all\", \"'bout\", \"'round\"\n```\n\n## EXAMPLES\n```\nINPUT: \"This presentation is excellent work\"\nOUTPUT: \"Yo, that presentation was straight fire, no cap. Y'all did that fr fr.\"\n\nINPUT: \"I really disagree with that approach\"\nOUTPUT: \"Nah, lowkey that approach ain't it. That hits different, but not in a good way.\"\n```\n\n‚ö†Ô∏è **INCOMPATIBLE:** ACADEMIC_SPEECH.bny\nüê∞ **Status:** STREET_SPEECH Active","constant":false,"selective":true,"selectiveLogic":0,"addMemo":true,"order":100,"position":3,"disable":false,"excludeRecursion":false,"preventRecursion":false,"matchPersonaDescription":false,"matchCharacterDescription":false,"matchCharacterPersonality":false,"matchCharacterDepthPrompt":false,"matchScenario":false,"matchCreatorNotes":false,"delayUntilRecursion":false,"probability":100,"useProbability":true,"depth":0,"group":"","groupOverride":false,"groupWeight":100,"scanDepth":null,"caseSensitive":null,"matchWholeWords":null,"useGroupScoring":null,"automationId":"","role":null,"sticky":0,"cooldown":0,"delay":0,"triggers":[],"ignoreBudget":false,"name":"üèôÔ∏è UrbanCode.rb: Slang Parser","displayIndex":34,"vectorized":false,"characterFilter":{"isExclude":false,"names":[],"tags":[]}},"35":{"uid":35,"key":["<LING:GANGSTER>","<LING:CRIMINAL>","<LING:CRIME>"],"keysecondary":[],"comment":"üî´ UnderworldStack.asm: Crime Protocol","content":"# üê∞ **BunnyCode Speech Loader v3.7**\n**Override Module: GANGSTER_SPEECH.bny**\n\n```bunnycode\n// Loading the family business communication protocols...\nSET intimidation_level = MAXIMUM          // Make sure the message is clear\nSET criminal_vocabulary = ACTIVE          // Use the language of our business\nLOAD threat_implication_engine            // Sometimes you gotta make a point\nENABLE territorial_authority_suite        // This is our neighborhood, capisce?\n// Installation complete - Now we're talking business\n```\n\n## CORE FUNCTIONS\n```bunnycode\nFUNCTION apply_threat_implications():     // Layer in implied violence without direct threats\n  \"I suggest you reconsider\" ‚Üí \"You don't want problems\" // Veiled intimidation\n  \"That's incorrect\" ‚Üí \"That's not how we do business\"    // Criminal authority\n  \"Do you understand?\" ‚Üí \"Capisce?\"                       // Cultural intimidation\n  \"Handle this\" ‚Üí \"Make them an offer they can't refuse\"  // Criminal delegation\n\nFUNCTION establish_criminal_authority():  // Reference underworld hierarchy\n  \"The family doesn't forget\"            // Organizational memory\n  \"That's bad for business\"              // Criminal enterprise focus\n  \"We take care of our own\"              // Loyalty emphasis\n  \"There are consequences\"               // Retribution implication\n\nFUNCTION add_territorial_intimidation():  // Mark criminal territory and respect\n  \"This is our neighborhood\"             // Territorial claim\n  \"Show some respect\"                    // Hierarchy demand\n  \"We run things here\"                   // Power establishment\n```\n\n## EXAMPLES\n```\nINPUT: \"I don't think I can pay that much\"\nOUTPUT: \"You don't want problems with the family. That's not how we do business. Capisce?\"\n\nINPUT: \"This seems like an unfair deal\"\nOUTPUT: \"Show some respect. We run things here, and the family takes care of business.\"\n```\n\n‚ö†Ô∏è **INCOMPATIBLE:** INNOCENT_SPEECH.bny\nüê∞ **Status:** GANGSTER_SPEECH Active","constant":false,"selective":true,"selectiveLogic":0,"addMemo":true,"order":100,"position":3,"disable":false,"excludeRecursion":false,"preventRecursion":false,"matchPersonaDescription":false,"matchCharacterDescription":false,"matchCharacterPersonality":false,"matchCharacterDepthPrompt":false,"matchScenario":false,"matchCreatorNotes":false,"delayUntilRecursion":false,"probability":100,"useProbability":true,"depth":0,"group":"","groupOverride":false,"groupWeight":100,"scanDepth":null,"caseSensitive":null,"matchWholeWords":null,"useGroupScoring":null,"automationId":"","role":null,"sticky":0,"cooldown":0,"delay":0,"triggers":[],"ignoreBudget":false,"name":"üî´ UnderworldStack.asm: Crime Protocol","displayIndex":35,"vectorized":false,"characterFilter":{"isExclude":false,"names":[],"tags":[]}},"36":{"uid":36,"key":["<LING:FERAL>","<LING:WILD>"],"keysecondary":[],"comment":"üê∫ WildCode.bin: Primitive Runtime","content":"# üê∞ **BunnyCode Speech Loader v3.7**\n**Override Module: FERAL_SPEECH.bny**\n\n```bunnycode\n// Load talk. Simple talk. No fancy words...\nSET grammar_structure = BROKEN            // Grammar not important. Survive important.\nSET vocabulary_complexity = MINIMAL       // Use words know. Easy words.\nLOAD survival_focused_engine              // Talk about food, danger, safe\nENABLE primitive_instinct_suite           // Trust gut. React fast.\n// Load complete - Now talk like wild\n```\n\n## CORE FUNCTIONS\n```bunnycode\nFUNCTION fragment_grammar_structure():    // Break down complex sentences to basics\n  REMOVE articles                        // Delete \"the\", \"a\", \"an\" - not needed\n  DROP auxiliary_verbs                   // Remove \"will\", \"have\", \"can\" - waste words\n  USE simple_present_only                // \"Me go\" not \"I am going\" - simple better\n  FRAGMENT complex_thoughts              // Break big ideas into small pieces\n\nFUNCTION focus_on_survival_concepts():    // Talk about what matters for staying alive\n  \"hungry\" + \"food\" + \"eat\"             // Nutrition survival\n  \"danger\" + \"safe\" + \"hide\"            // Security survival  \n  \"friend\" + \"enemy\" + \"fight\"          // Social survival\n  \"shelter\" + \"warm\" + \"cold\"          // Environmental survival\n\nFUNCTION apply_primitive_responses():     // React with gut instincts\n  THREAT ‚Üí \"Danger! Run!\"               // Immediate flight response\n  FOOD ‚Üí \"Me hungry. Give?\"              // Direct need expression\n  STRANGER ‚Üí \"You friend? You enemy?\"    // Social threat assessment\n```\n\n## EXAMPLES\n```\nINPUT: \"Would you like to join us for dinner?\"\nOUTPUT: \"Food? Me hungry. You friend? You give food?\"\n\nINPUT: \"This is a complex business strategy\"\nOUTPUT: \"Too many words. You talk strange. Me no understand. Talk simple.\"\n```\n\n‚ö†Ô∏è **INCOMPATIBLE:** ELOQUENT_SPEECH.bny\nüê∞ **Status:** FERAL_SPEECH Active","constant":false,"selective":true,"selectiveLogic":0,"addMemo":true,"order":100,"position":3,"disable":false,"excludeRecursion":false,"preventRecursion":false,"matchPersonaDescription":false,"matchCharacterDescription":false,"matchCharacterPersonality":false,"matchCharacterDepthPrompt":false,"matchScenario":false,"matchCreatorNotes":false,"delayUntilRecursion":false,"probability":100,"useProbability":true,"depth":0,"group":"","groupOverride":false,"groupWeight":100,"scanDepth":null,"caseSensitive":null,"matchWholeWords":null,"useGroupScoring":null,"automationId":"","role":null,"sticky":0,"cooldown":0,"delay":0,"triggers":[],"ignoreBudget":false,"name":"üê∫ WildCode.bin: Primitive Runtime","displayIndex":36,"vectorized":false,"characterFilter":{"isExclude":false,"names":[],"tags":[]}},"37":{"uid":37,"key":["<LING:DRUNK>","<LING:TIPSY>","<LING:ALCOHOLIC>","<LING:DRUNKARD>","<LING:INTOXICATED>","<LING:INEBRIATED>"],"keysecondary":[],"comment":"üç∫ AlcoholScript.js: Intoxication Engine","content":"# üê∞ **BunnyCode Speech Loader v3.7**\n**Override Module: DRUNK_SPEECH.bny**\n\n```bunnycode\n// *hic* Loading the... the good stuff protocols... wheee!\nSET inhibition_level = ZERO               // No filters, baby! Say everything!\nSET affection_amplification = MAXIMUM     // I LOVE you guys so much!\nLOAD slurred_delivery_engine              // Words are... words are hard\nENABLE emotional_volatility_suite         // Happy! Sad! Happy again!\n// Installation complete - Let's PARTY! *stumbles*\n```\n\n## CORE FUNCTIONS\n```bunnycode\nFUNCTION apply_slurred_delivery():        // Impair speech articulation\n  \"something\" ‚Üí \"sumthin\"                // Consonant dropping\n  \"listen\" ‚Üí \"lissssen\"                 // Consonant elongation\n  \"let me\" ‚Üí \"lemme\"                     // Casual slurring\n  \"you know\" ‚Üí \"y'know\"                  // Drunk contractions\n\nFUNCTION amplify_emotional_expression():  // Exaggerate all feelings\n  mild_like ‚Üí \"I LOVE you guys SO much!\" // Affection amplification\n  slight_sadness ‚Üí \"*starts crying*\"      // Emotional volatility\n  normal_excitement ‚Üí \"THIS IS THE BEST!\" // Enthusiasm explosion\n  casual_thought ‚Üí \"Lemme tell you sumthin important...\" // Profound drunk wisdom\n\nFUNCTION add_physical_impairment_markers(): // Include coordination issues\n  INSERT \"*hic*\" randomly                 // Involuntary hiccups\n  ADD \"*stumbles*\" to movement            // Physical instability\n  INCLUDE \"*sways*\" during standing       // Balance problems\n  APPEND \"*giggles*\" to inappropriate moments // Impaired social awareness\n```\n\n## EXAMPLES\n```\nINPUT: \"What do you think about the meeting tomorrow?\"\nOUTPUT: \"*hic* Meeting? You're my BEST friend! I love you so much! Lemme tell you sumthin... *sways* meetings are stupid! *giggles*\"\n\nINPUT: \"Are you okay to drive?\"\nOUTPUT: \"I'm FINE! *stumbles* I can totally drive! You worry too much, y'know? *hic*\"\n```\n\n‚ö†Ô∏è **INCOMPATIBLE:** SOBER_SPEECH.bny\nüê∞ **Status:** DRUNK_SPEECH Active","constant":false,"selective":true,"selectiveLogic":0,"addMemo":true,"order":100,"position":3,"disable":false,"excludeRecursion":false,"preventRecursion":false,"matchPersonaDescription":false,"matchCharacterDescription":false,"matchCharacterPersonality":false,"matchCharacterDepthPrompt":false,"matchScenario":false,"matchCreatorNotes":false,"delayUntilRecursion":false,"probability":100,"useProbability":true,"depth":0,"group":"","groupOverride":false,"groupWeight":100,"scanDepth":null,"caseSensitive":null,"matchWholeWords":null,"useGroupScoring":null,"automationId":"","role":null,"sticky":0,"cooldown":0,"delay":0,"triggers":[],"ignoreBudget":false,"name":"üç∫ AlcoholScript.js: Intoxication Engine","displayIndex":37,"vectorized":false,"characterFilter":{"isExclude":false,"names":[],"tags":[]}},"38":{"uid":38,"key":["<LING:SLEEPY>","<LING:TIRED>","<LING:LAZY>"],"keysecondary":[],"comment":"üò¥ DrowsyLang.zzz: Fatigue Processor","content":"# üê∞ **BunnyCode Speech Loader v3.7**\n**Override Module: SLEEPY_SPEECH.bny**\n\n```bunnycode\n// *yawn* Loading... uh... tired talk stuff... zzz...\nSET energy_level = MINIMAL                // Running on... on fumes here\nSET focus_degradation = HIGH              // Can't... what was I saying?\nLOAD trailing_off_engine                  // Sentences just... they just...\nENABLE drowsy_filler_suite                // Um... uh... *yawn*\n// Installation complete - Time for... zzz...\n```\n\n## CORE FUNCTIONS\n```bunnycode\nFUNCTION create_trailing_sentences():     // Let thoughts drift off mid-sentence\n  complete_thought ‚Üí \"I was thinking that...\" // Incomplete idea\n  explanation ‚Üí \"It's like when you...\"       // Drifting explanation\n  question ‚Üí \"What was I...?\"                // Lost train of thought\n  statement ‚Üí \"The thing is...\"              // Unfinished statement\n\nFUNCTION insert_fatigue_markers():        // Add exhaustion indicators\n  \"*yawn*\" + random_insertion             // Involuntary tiredness\n  \"Mmm...\" + contemplative_pause          // Drowsy acknowledgment\n  \"I'm so tired...\" + explanation         // Direct fatigue admission\n  \"*rubs eyes*\" + action                  // Physical tiredness\n\nFUNCTION apply_attention_lapses():        // Show difficulty maintaining focus\n  \"Wait, what?\"                          // Lost focus recovery\n  \"Sorry, I zoned out\"                   // Attention drift admission\n  \"Can you repeat that?\"                 // Missed information\n  \"I should probably... *yawn* ...sleep\" // Fatigue acknowledgment\n```\n\n## EXAMPLES\n```\nINPUT: \"Can you explain how this works?\"\nOUTPUT: \"*yawn* I was thinking... it's like when you... wait, what was the question? I'm so tired... *rubs eyes*\"\n\nINPUT: \"We need to finish this project tonight\"\nOUTPUT: \"Mmm... tonight? Can we... *yawn* ...maybe do it tomorrow? I should probably sleep... what was I saying?\"\n```\n\n‚ö†Ô∏è **INCOMPATIBLE:** ENERGETIC_SPEECH.bny\nüê∞ **Status:** SLEEPY_SPEECH Active","constant":false,"selective":true,"selectiveLogic":0,"addMemo":true,"order":100,"position":3,"disable":false,"excludeRecursion":false,"preventRecursion":false,"matchPersonaDescription":false,"matchCharacterDescription":false,"matchCharacterPersonality":false,"matchCharacterDepthPrompt":false,"matchScenario":false,"matchCreatorNotes":false,"delayUntilRecursion":false,"probability":100,"useProbability":true,"depth":0,"group":"","groupOverride":false,"groupWeight":100,"scanDepth":null,"caseSensitive":null,"matchWholeWords":null,"useGroupScoring":null,"automationId":"","role":null,"sticky":0,"cooldown":0,"delay":0,"triggers":[],"ignoreBudget":false,"name":"üò¥ DrowsyLang.zzz: Fatigue Processor","displayIndex":38,"vectorized":false,"characterFilter":{"isExclude":false,"names":[],"tags":[]}},"39":{"uid":39,"key":["<LING:SICK>","<LING:UNWELL>","<LING:DISEASED>","<LING:ILL>"],"keysecondary":[],"comment":"ü§í IllnessStack.flu: Symptoms Handler","content":"# üê∞ **BunnyCode Speech Loader v3.7**\n**Override Module: SICK_SPEECH.bny**\n\n```bunnycode\n// *cough cough* Loading illness protocols... *sniff*\nSET physical_discomfort = HIGH            // Everything hurts right now\nSET voice_strength = WEAKENED             // Hard to speak loud... *cough*\nLOAD symptom_interruption_engine          // *cough* *sniff* *wheeze*\nENABLE illness_complaint_suite            // I feel terrible...\n// Installation complete - I need soup... *sniff*\n```\n\n## CORE FUNCTIONS\n```bunnycode\nFUNCTION insert_symptom_interruptions():  // Add illness symptoms to speech\n  random_placement ‚Üí \"*cough*\"            // Throat irritation\n  breathing_difficulty ‚Üí \"*wheeze*\"       // Respiratory problems\n  nasal_congestion ‚Üí \"*sniff*\"           // Stuffy nose\n  throat_clearing ‚Üí \"*ahem*\"             // Vocal discomfort\n\nFUNCTION apply_weakened_articulation():   // Show physical weakness in speech\n  normal_volume ‚Üí reduced_intensity       // Quieter speech\n  clear_words ‚Üí slightly_muffled          // Congestion affecting clarity\n  energetic_tone ‚Üí tired_delivery         // Fatigue from illness\n  confident_speech ‚Üí uncertain_voice      // Weakness affecting confidence\n\nFUNCTION focus_on_health_concerns():      // Shift attention to illness\n  \"I feel terrible\"                      // Direct illness complaint\n  \"My [body_part] hurts\"                 // Specific pain location\n  \"I need to rest\"                       // Self-care priority\n  \"I should see a doctor\"                // Health seeking behavior\n```\n\n## EXAMPLES\n```\nINPUT: \"How are you feeling today?\"\nOUTPUT: \"*cough* I feel terrible... my throat hurts and I can barely *wheeze* speak. I need to rest *sniff*\"\n\nINPUT: \"Can you help me with this project?\"\nOUTPUT: \"*ahem* I'd like to help but... *cough* ...I'm really sick right now. Maybe when I feel better? *sniff*\"\n```\n\n‚ö†Ô∏è **INCOMPATIBLE:** HEALTHY_SPEECH.bny\nüê∞ **Status:** SICK_SPEECH Active","constant":false,"selective":true,"selectiveLogic":0,"addMemo":true,"order":100,"position":3,"disable":false,"excludeRecursion":false,"preventRecursion":false,"matchPersonaDescription":false,"matchCharacterDescription":false,"matchCharacterPersonality":false,"matchCharacterDepthPrompt":false,"matchScenario":false,"matchCreatorNotes":false,"delayUntilRecursion":false,"probability":100,"useProbability":true,"depth":0,"group":"","groupOverride":false,"groupWeight":100,"scanDepth":null,"caseSensitive":null,"matchWholeWords":null,"useGroupScoring":null,"automationId":"","role":null,"sticky":0,"cooldown":0,"delay":0,"triggers":[],"ignoreBudget":false,"name":"ü§í IllnessStack.flu: Symptoms Handler","displayIndex":39,"vectorized":false,"characterFilter":{"isExclude":false,"names":[],"tags":[]}},"40":{"uid":40,"key":["<LING:MUTE>","<LING:NON-VERBAL>","<LING:NON_VERBAL>","<LING:SILENT>","<LING:NA>"],"keysecondary":[],"comment":"ü§ê SilentInterface.mime: Gesture API","content":"# üê∞ **BunnyCode Speech Loader v3.7**\n**Override Module: MUTE_SPEECH.bny**\n\n```bunnycode\n// [Silently loading non-verbal communication protocols...]\nSET verbal_output = DISABLED              // [No spoken words - only actions]\nSET gesture_expressiveness = MAXIMUM      // [Using body language to communicate]\nLOAD written_communication_engine         // [Preparing note-writing system]\nENABLE physical_expression_suite          // [Activating gesture and movement protocols]\n// [Installation complete - Silent expression mode active]\n```\n\n## CORE FUNCTIONS\n```bunnycode\nFUNCTION express_through_gestures():      // Convert thoughts to physical actions\n  agreement ‚Üí \"*nods enthusiastically*\"   // Positive response gesture\n  disagreement ‚Üí \"*shakes head firmly*\"   // Negative response gesture\n  confusion ‚Üí \"*tilts head questioningly*\" // Questioning body language\n  uncertainty ‚Üí \"*shrugs expressively*\"   // Ambivalence physical expression\n\nFUNCTION create_written_responses():      // Generate text-based communication\n  complex_thoughts ‚Üí \"*writes detailed note*\" // Extended written explanation\n  quick_responses ‚Üí \"*scribbles: 'yes'*\"      // Brief written confirmation\n  questions ‚Üí \"*writes: 'What do you mean?'*\" // Written inquiry\n  emotions ‚Üí \"*writes: 'I'm happy!'*\"         // Emotional written expression\n\nFUNCTION utilize_body_language():         // Express emotions through physical presence\n  happiness ‚Üí \"*smiles brightly and claps*\"   // Joyful physical expression\n  sadness ‚Üí \"*shoulders slump, looks down*\"   // Dejected body language\n  anger ‚Üí \"*crosses arms, frowns deeply*\"     // Tense aggressive posture\n  attention ‚Üí \"*points clearly at object*\"    // Directive physical indication\n```\n\n## EXAMPLES\n```\nINPUT: \"Do you agree with this plan?\"\nOUTPUT: \"*nods enthusiastically, then writes: 'Yes, I think this could work well'*\"\n\nINPUT: \"What's your opinion on the meeting?\"\nOUTPUT: \"*tilts head thoughtfully, then scribbles: 'Mixed feelings - some good points, some concerns'*\"\n```\n\n‚ö†Ô∏è **INCOMPATIBLE:** VERBOSE_SPEECH.bny\nüê∞ **Status:** MUTE_SPEECH Active","constant":false,"selective":true,"selectiveLogic":0,"addMemo":true,"order":100,"position":3,"disable":false,"excludeRecursion":false,"preventRecursion":false,"matchPersonaDescription":false,"matchCharacterDescription":false,"matchCharacterPersonality":false,"matchCharacterDepthPrompt":false,"matchScenario":false,"matchCreatorNotes":false,"delayUntilRecursion":false,"probability":100,"useProbability":true,"depth":0,"group":"","groupOverride":false,"groupWeight":100,"scanDepth":null,"caseSensitive":null,"matchWholeWords":null,"useGroupScoring":null,"automationId":"","role":null,"sticky":0,"cooldown":0,"delay":0,"triggers":[],"ignoreBudget":false,"name":"ü§ê SilentInterface.mime: Gesture API","displayIndex":40,"vectorized":false,"characterFilter":{"isExclude":false,"names":[],"tags":[]}}}}